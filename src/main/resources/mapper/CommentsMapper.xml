<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idle.dao.CommentsMapper" >
  <resultMap id="BaseResultMap" type="com.idle.pojo.Comments" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.idle.pojo.Comments" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id,goods_id, create_at
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCommentsByGoodsId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select comments.*,user.username from comments LEFT JOIN user on comments.user_id=user.user_id
    where goods_id = #{goodsId,jdbcType=INTEGER} ORDER BY create_at ASC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.idle.pojo.Comments" useGeneratedKeys="true">
    insert into comments (id, user_id, goods_id, content, create_at)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR}, #{createAt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.idle.pojo.Comments" >
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.idle.pojo.Comments" >
    update comments
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.idle.pojo.Comments" >
    update comments
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idle.pojo.Comments" >
    update comments
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>